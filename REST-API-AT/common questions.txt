Basic Authentication:

Clients send their credentials (username and password) with each request in the form of a base64-encoded string in the HTTP header. It's simple but not very secure unless used over HTTPS.
Bearer Token Authentication:

Clients include a token (usually a long random string) in the HTTP headers (often in the "Authorization" header) to prove their identity. The token is obtained through a prior authentication process.
OAuth 2.0:

OAuth 2.0 is a framework for authorization and authentication. It allows clients to access protected resources on behalf of a resource owner (user) with their permission. It's commonly used in RESTful APIs for delegated access.
JSON Web Tokens (JWT):

JWT is a compact, self-contained token that can represent a user's identity and claims. It's often used for securely transmitting information between parties, such as the user and the server.
API Keys:

Clients use a unique API key, often generated by the service provider, to access the API. It's a simple but less secure method.
=COUNTIF($A:$Z,Indirect(Address(Row(),Column(),)))>1
Digest Authentication:

Total Manual Execution=723
FE to be automated=53
App to be automated=66
BE to be automated =15 
Total can be automated cases= 210




A challenge-response mechanism where the server sends a challenge to the client, which the client must hash and send back. It's more secure than Basic Authentication but less common.